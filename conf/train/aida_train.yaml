# reproducibility
seed: 42

export: False
float32_matmul_precision: "medium"
set_determinism_the_old_way: False
top_k: 100

only_test: False

# pl_trainer
pl_trainer:
  _target_: pytorch_lightning.Trainer
  accelerator: gpu
  devices: 1
  num_nodes: 1
  strategy: auto
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0
  val_check_interval: 1.0 # you can specify an int "n" here => validation every "n" steps
  check_val_every_n_epoch: 1
  max_epochs: 0
  max_steps: 100000
  deterministic: True
  fast_dev_run: False
  precision: 16
  # ckpt_path: null

# early stopping callback
# "early_stopping_callback: null" will disable early stopping
early_stopping_callback:
  _target_: pytorch_lightning.callbacks.EarlyStopping
  monitor: validate_recall@${train.top_k}
  mode: max
  patience: 15
# model_checkpoint_callback
# "model_checkpoint_callback: null" will disable model checkpointing
model_checkpoint_callback:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: validate_recall@${train.top_k}
  mode: max
  verbose: True
  save_top_k: 1
  filename: "checkpoint-validate_recall@${train.top_k}_{validate_recall@${train.top_k}:.4f}-epoch_{epoch:02d}"
  auto_insert_metric_name: False

prediction_callbacks:
  - _target_: golden_retriever.callbacks.custom_callbacks.GoldenRetrieverPredictionCallback
    k: ${train.top_k}
    batch_size: 512
    use_faiss: False
    move_index_to_cpu: False
    other_callbacks:
      - _target_: golden_retriever.callbacks.evaluation_callbacks.TopKEvaluationCallback
        k: ${train.top_k}
        verbose: True
      - _target_: golden_retriever.callbacks.evaluation_callbacks.TopKEvaluationCallback
        k: 50
        verbose: True
      - _target_: golden_retriever.callbacks.utils_callbacks.SavePredictionsCallback

  - _target_: golden_retriever.callbacks.utils_callbacks.SaveRetrieverCallback

  - _target_: golden_retriever.callbacks.custom_callbacks.NegativeAugmentationCallback
    k: ${train.top_k}
    batch_size: 512
    stages: [ validate ]
    metric_to_monitor: validate_recall@${train.top_k}
    threshold: 0.0
    max_negatives: 3
    refresh_every_n_epochs: 1
    # other_callbacks:
    #   - _target_: golden_retriever.callbacks.utils_callbacks.FreeUpIndexerVRAMCallback

  - _target_: golden_retriever.callbacks.utils_callbacks.ShuffleTrainDatasetCallback
